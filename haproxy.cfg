global
    log 127.0.0.1 local0 debug
    maxconn     4000
    daemon

defaults
    mode                    http
    log                     global
    option                  tcplog
    option                  dontlognull
    option http-server-close
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend hapr
  bind *:443 #ssl crt /usr/local/etc/haproxy/nodes.pem crt /usr/local/etc/haproxy/redirect.pem crt /usr/local/etc/haproxy/master.pem
  mode tcp
  #option socket-stats
#  tcp-request inspect-delay 5s
#  tcp-request content accept if { req_ssl_hello_type 1 }
  default_backend cloud


backend cloud
  mode tcp
  stick-table type binary len 32 size 30k expire 30m
  acl clienthello req_ssl_hello_type 1
  acl serverhello rep_ssl_hello_type 2
  # use tcp content accepts to detects ssl client and server hello.
  tcp-request inspect-delay 5s
  tcp-request content accept if clienthello
  # no timeout on response inspect delay by default.
  tcp-response content accept if serverhello
  stick on payload_lv(43,1) if clienthello
  # Learn on response if server hello.
  stick store-response payload_lv(43,1) if serverhello
  option ssl-hello-chk
  use-server master if { req_ssl_sni -i master.local.cloud.com }
  use-server redb if { req_ssl_sni -i redirect.local.cloud.com }
  use-server gate if { req_ssl_sni -i local.cloud.com }
  use-server node if { req_ssl_sni -i z10.local.cloud.com }

  server master master.local.cloud.com:3443
  server redb redirect.local.cloud.com:443
  server gate local.cloud.com:443
  server node z10.local.cloud.com:443
